#!/usr/bin/env node

require('@babel/register')
const { expected } = require('../src/utils/error')
const { saveUserProfile } = require('../src/db/UserProfile')
const { registerValidUser } = require('../src/sdk')
const { setupCliContexts, tearDownCliContexts } = require('../src/cli')
const program = require('commander')

program
  .description('register a new user')
  .option('-p, --phoneNumber [phoneNumber]', "The user's phone number")
  .option('-n, --userName [userName]', "The user's name")
  .parse(process.argv)

const exec = async ({ phoneNumber, userName }) => {
  if (!phoneNumber) {
    throw expected({ message: 'Phone nunber is required' })
  }
  if (!userName) {
    throw expected({ message: 'Name is required' })
  }
  const contexts = await setupCliContexts()
  const { context } = contexts
  const { logger } = context

  try {
    const user = await registerValidUser(context, {
      phoneNumber
    })
    await saveUserProfile(context, {
      name: userName,
      userId: user.id
    })
    logger.info('USER CREATED')
    logger.info(user)
  } catch (error) {
    logger.warn('An error occured while trying to register the user')
    throw error
  } finally {
    await tearDownCliContexts(contexts)
  }
}

exec(program)
  .then(() => process.exit())
  .catch((error) => {
    // eslint-disable-next-line no-console
    console.error(error)
    process.exit(1)
  })

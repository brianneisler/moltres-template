import _ from 'mudash'
import fs from 'fs-promise'
import path from 'path'
import Promise from 'bluebird'
import { takeEvery } from 'redux-saga'
import { call, fork } from 'redux-saga/effects'
import { rebuildDependencies } from './actions'



const HEADER_TEMPLATE = () =>
`//DO NOT MODIFY - This file is auto generated by moltres\n`

const REQUIRE_TEMPLATE = ({ name }) =>
`const ${name} = require('./${name}')\n`

const EXPORTS_TEMPLATE = ({exports}) =>
`export {
${_.join(exports, ',\n')}
}`

const EXPORT_TEMPLATE = ({name}) => `  ${name}`

async function generateFolderIndex(target) {
  const files = await fs.readdir(target)
  const modules = await Promise.all(_.map(files, async (file) => {
    const modulePath = path.resolve(target, file)
    const stat = await fs.stat(path.resolve(target, file))
    if (stat.isDirectory()) {
      return {
        name: file,
        path:modulePath
      }
    }
  }))
  let output = HEADER_TEMPLATE()
  let exports = []
  _.each(_.compact(modules), (module) => {
    output += REQUIRE_TEMPLATE(module)
    exports = _.push(exports, EXPORT_TEMPLATE(module))
  })
  output += EXPORTS_TEMPLATE({exports})
  generateFolderIndex(path.resolve(__dirname, '../../moltres-projects/components'))

}



export default function* root() {
  yield [
    takeEvery(rebuildDependencies.toString(), handleRebuildDependencies)
  ]
}

function* handleRebuildDependencies(action) {
  console.log('Made it here')
}

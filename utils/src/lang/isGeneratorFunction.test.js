import isGeneratorFunction from './isGeneratorFunction'

describe('isGeneratorFunction', () => {
  test('returns true for generator function', () => {
    expect(isGeneratorFunction(function*() {})).toBe(true)
  })

  test('returns false for all other values', () => {
    expect(isGeneratorFunction(undefined)).toBe(false)
    expect(isGeneratorFunction(null)).toBe(false)
    expect(isGeneratorFunction('')).toBe(false)
    expect(isGeneratorFunction('abc')).toBe(false)
    expect(isGeneratorFunction(false)).toBe(false)
    expect(isGeneratorFunction(true)).toBe(false)
    expect(isGeneratorFunction(0)).toBe(false)
    expect(isGeneratorFunction(-1)).toBe(false)
    expect(isGeneratorFunction(1)).toBe(false)
    expect(isGeneratorFunction(NaN)).toBe(false)
    expect(isGeneratorFunction(Infinity)).toBe(false)
    expect(isGeneratorFunction(-Infinity)).toBe(false)
    expect(isGeneratorFunction({})).toBe(false)
    expect(isGeneratorFunction([])).toBe(false)
    expect(isGeneratorFunction(/abc/)).toBe(false)
    expect(isGeneratorFunction((function*() {})())).toBe(false)
    expect(isGeneratorFunction(async () => {})).toBe(false)
    expect(isGeneratorFunction(() => {})).toBe(false)
    expect(isGeneratorFunction(function() {})).toBe(false)
    expect(isGeneratorFunction(new Array(0))).toBe(false)
    expect(isGeneratorFunction(new ArrayBuffer(2))).toBe(false)
    expect(isGeneratorFunction(new Boolean(false))).toBe(false)
    expect(isGeneratorFunction(new Boolean(true))).toBe(false)
    expect(isGeneratorFunction(new Date())).toBe(false)
    expect(isGeneratorFunction(new Error())).toBe(false)
    expect(isGeneratorFunction(new Number(1))).toBe(false)
    expect(isGeneratorFunction(new Promise(() => {}))).toBe(false)
    expect(isGeneratorFunction(new Proxy({}, {}))).toBe(false)
    expect(isGeneratorFunction(new Set())).toBe(false)
    expect(isGeneratorFunction(new String('abc'))).toBe(false)
    expect(isGeneratorFunction(Symbol('abc'))).toBe(false)
    expect(isGeneratorFunction(new WeakMap())).toBe(false)
    expect(isGeneratorFunction(new WeakSet())).toBe(false)
  })
})
